apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: CERTIFICATE_NAMESPACE/CERTIFICATE_NAME
    controller-gen.kubebuilder.io/version: v0.14.0
  name: kronosapps.core.wecraft.tn
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: webhook-service
          namespace: system
          path: /convert
      conversionReviewVersions:
      - v1
  group: core.wecraft.tn
  names:
    kind: KronosApp
    listKind: KronosAppList
    plural: kronosapps
    singular: kronosapp
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .status.reason
      name: Reason
      type: string
    - jsonPath: .status.handledResources
      name: Handled Resources
      type: string
    - jsonPath: .status.nextOperation
      name: Next Operation
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KronosApp is the Schema for the kronosapps API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KronosAppSpec defines the desired state of KronosApp
            properties:
              endSleep:
                type: string
              forceSleep:
                type: boolean
              forceWake:
                type: boolean
              holidays:
                items:
                  properties:
                    date:
                      type: string
                    name:
                      type: string
                  required:
                  - date
                  - name
                  type: object
                type: array
              includedObjects:
                items:
                  properties:
                    apiVersion:
                      type: string
                    excludeRef:
                      type: string
                    includeRef:
                      type: string
                    kind:
                      type: string
                    namespace:
                      type: string
                  required:
                  - apiVersion
                  - excludeRef
                  - includeRef
                  - kind
                  - namespace
                  type: object
                type: array
              startSleep:
                type: string
              timezone:
                type: string
              weekdays:
                type: string
            required:
            - endSleep
            - includedObjects
            - startSleep
            - weekdays
            type: object
          status:
            description: KronosAppStatus defines the observed state of KronosApp
            properties:
              handledResources:
                type: string
              nextOperation:
                type: string
              reason:
                type: string
              secretCreated:
                items:
                  type: string
                type: array
              status:
                type: string
            required:
            - handledResources
            - nextOperation
            - reason
            - status
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: kronos
    control-plane: controller-manager
  name: kronos-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: kronos
  name: kronos-controller-manager
  namespace: kronos-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: kronos
  name: kronos-leader-election-role
  namespace: kronos-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: kronos
  name: kronos-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - core.wecraft.tn
  resources:
  - kronosapps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - core.wecraft.tn
  resources:
  - kronosapps/finalizers
  verbs:
  - update
- apiGroups:
  - core.wecraft.tn
  resources:
  - kronosapps/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: kronos
  name: kronos-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: kronos
  name: kronos-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: kronos
  name: kronos-leader-election-rolebinding
  namespace: kronos-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kronos-leader-election-role
subjects:
- kind: ServiceAccount
  name: kronos-controller-manager
  namespace: kronos-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: kronos
  name: kronos-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kronos-manager-role
subjects:
- kind: ServiceAccount
  name: kronos-controller-manager
  namespace: kronos-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: kronos
  name: kronos-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kronos-proxy-role
subjects:
- kind: ServiceAccount
  name: kronos-controller-manager
  namespace: kronos-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kronos
  name: kronos-controller-manager-metrics-service
  namespace: kronos-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app: kronos
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kronos
  name: kronos-webhook-service
  namespace: kronos-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app: kronos
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kronos
    control-plane: controller-manager
  name: kronos-controller-manager
  namespace: kronos-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kronos
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app: kronos
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: kronosorg/kronos-core:v0.4.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kronos-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app: kronos
  name: kronos-serving-cert
  namespace: kronos-system
spec:
  dnsNames:
  - kronos-webhook-service.kronos-system.svc
  - kronos-webhook-service.kronos-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: kronos-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app: kronos
  name: kronos-selfsigned-issuer
  namespace: kronos-system
spec:
  selfSigned: {}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: kronos
    control-plane: controller-manager
  name: kronos-controller-manager-metrics-monitor
  namespace: kronos-system
spec:
  endpoints:
  - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
    metricRelabelings:
    - action: replace
      regex: (.*)
      replacement: kronos_$1
      sourceLabels:
      - __name__
      targetLabel: __name__
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  selector:
    matchLabels:
      control-plane: controller-manager
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kronos-system/kronos-serving-cert
  labels:
    app: kronos
  name: kronos-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: kronos-webhook-service
      namespace: kronos-system
      path: /mutate-core-wecraft-tn-v1alpha1-kronosapp
  failurePolicy: Fail
  name: mkronosapp.kb.io
  rules:
  - apiGroups:
    - core.wecraft.tn
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - kronosapps
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kronos-system/kronos-serving-cert
  labels:
    app: kronos
  name: kronos-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: kronos-webhook-service
      namespace: kronos-system
      path: /validate-core-wecraft-tn-v1alpha1-kronosapp
  failurePolicy: Fail
  name: vkronosapp.kb.io
  rules:
  - apiGroups:
    - core.wecraft.tn
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - kronosapps
  sideEffects: None
